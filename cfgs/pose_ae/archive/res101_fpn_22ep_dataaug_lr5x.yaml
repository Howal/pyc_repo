---
#mxnet use docker philly/jobs/test/mxnet v131_py27_cuda9_zeliu
MXNET_VERSION: ""
output_path: "./output/pose/coco"
symbol: res101_fpn
gpus: '0,1,2,3'
class_agnostic: false
frequent: 100
kvstore: device
rng_seed: 3
pose:
  AUG_TYPE: 'AE'
  SCALES:
  - 512
  - 512
  SCALES_OUT:
  - 128
  - 128
  det_loss_weight: 1.0
  inside_loss_weight: 0.001
  outside_loss_weight: 0.001
network:
  pretrained: "/hdfs/nextmsra/zhez/model/resnet101_8gpu_512_philly_baseline/resnet_huhan_101"
  pretrained_epoch: 0
  PIXEL_MEANS:
  - 103.06
  - 115.90
  - 123.15
  PIXEL_STDS:
  - 57.375
  - 57.12
  - 58.395
  IMAGE_STRIDE: 32
  FIXED_PARAMS:
  - conv0
  - bn_conv0
  - stage1
  - gamma
  - beta
  num_layers: 101
  use_dilation_on_c5: false
  backbone_use_dconv: false
dataset:
  use_zip: true
  ignore_posedb_cache: false
  dataset: coco_pose
  dataset_path: "/hdfs/nextmsra/hanhu/data/coco"
  image_set: train
#  image_set: test_dev, test_std
  root_path: "./"
  test_image_set: test_dev
  NUM_PARTS: 17
  MAX_PERSONS: 30

TRAIN:
  optimizer: 'adam'
  lr: 0.000125
  lr_step: '12.15'
  lr_factor: 0.05
  warmup: false
  warmup_lr: 0.0
  warmup_method: 'linear'
  # typically we will use 8000 warmup step for single GPU for COCO
  warmup_step: 500
  wd: 0.0
  begin_epoch: 0
  end_epoch: 22
  model_prefix: 'pose_coco'
  # whether resume training
  AUTO_RESUME: false
  RESUME: false
  # whether flip image
  FLIP: true
  # whether shuffle image
  SHUFFLE: true
  # size of images for each device, 2 for rcnn, 1 for rpn and e2e
  BATCH_IMAGES: 4
  FP16: false
  FP16_GRAD_SCALE: 128.0
  GPU_METRIC: true
TEST:
  # size of images for each device
  BATCH_IMAGES: 1
  test_epoch: 22
